var fs = require("fs");

function convert() {
	fs.readFile('data/whatpulse-keyboard-heatmap.csv', function(err, data) {
		var d = data.toString();
		d = d.split(/[\r\n]+/);
		// console.log(d);
		var len = d.length;
		for (var i = 1; i < len - 1; i++) {
			var t = d[i];
			t = t.split(',');
			var num = parseInt(t[t.length - 1]);
			// num = Math.floor(Math.log2(1 + num) * 100);
			map[i - 1].push(num);
		}
		// console.log(map);

		var points = new Array();
		var texts = new Array();
		var max = 0;
		for (var i = 0; i < map.length; i++) {
			if (!map[i][0]) continue;
			// if (!map[i][4]) continue;
			
			var x = map[i][0];
			var y = map[i][1];
			var w = map[i][2];
			var h = map[i][3];
			var v = map[i][4];
			var space = 10;
			var p = x;
			while (p > x - w / 2) p -= space;
			p += space;
			var q = y;
			while (q > y - h / 2) q -= space;
			q += space;
			for (var pp = p; pp < x + w / 2; pp += space) {
				for (var qq = q; qq < y + h / 2; qq += space) {
					points.push({x: pp, y: qq, value: Math.floor(Math.random() * v)});
				}
			}
			texts.push({x: x, y: y, w: w, h: h, value: v});
			max = Math.max(max, map[i][4]);
		}
		var str = JSON.stringify(points);
		str = "var points = " + str + ";\n";
		str += "var max = " + max + ";\n";
		str += "var texts = " + JSON.stringify(texts) + ";\n";
		console.log(str);
		var path = 'js/data.js';
		fs.writeFile(path, str, function() {
			console.log("File saved at", path);
		});
	});
}

var map = [[240, 368, 60, 72],
	[336, 368, 60, 72],
	[432, 368, 60, 72],
	[528, 368, 60, 72],
	[624, 368, 60, 72],
	[719, 368, 60, 72],
	[815, 368, 60, 72],
	[911, 368, 60, 72],
	[1006, 368, 60, 72],
	[1102, 368, 60, 72],
	[314, 558, 60, 72],
	[743, 654, 60, 72],
	[551, 654, 60, 72],
	[505, 558, 60, 72],
	[481, 463, 60, 72],
	[601, 558, 60, 72],
	[696, 558, 60, 72],
	[792, 558, 60, 72],
	[959, 463, 60, 72],
	[887, 558, 60, 72],
	[983, 558, 60, 72],
	[1079, 558, 60, 72],
	[935, 654, 60, 72],
	[839, 654, 60, 72],
	[1054, 463, 60, 72],
	[1150, 463, 60, 72],
	[290, 463, 60, 72],
	[576, 463, 60, 72],
	[409, 558, 60, 72],
	[672, 463, 60, 72],
	[863, 463, 60, 72],
	[647, 654, 60, 72],
	[385, 463, 60, 72],
	[456, 654, 60, 72],
	[768, 463, 60, 72],
	[360, 654, 60, 72],
	[1438, 368, 156, 72],
	[1424, 558, 176, 72],
	[170, 463, 106, 72],
	[181, 558, 128, 72],
	[205, 654, 176, 72],
	[156, 750, 80, 72],
	[396, 750, 80, 72],
	[1113, 750, 80, 72],
	[1472, 750, 80, 72],
	[1400, 654, 226, 72],
	[1599, 750, 60, 72],
	[1695, 750, 60, 72],
	[1791, 750, 60, 72],
	[1695, 654, 60, 72],
	[1599, 368, 60, 72],
	[1695, 368, 60, 72],
	[1791, 368, 60, 72],
	[1599, 463, 60, 72],
	[1695, 463, 60, 72],
	[1791, 463, 60, 72],
	[145, 254, 60, 72],
	[754, 750, 564, 72],
	[336, 254, 60, 72],
	[432, 254, 60, 72],
	[528, 254, 60, 72],
	[624, 254, 60, 72],
	[767, 254, 60, 72],
	[863, 254, 60, 72],
	[959, 254, 60, 72],
	[1055, 254, 60, 72],
	[1198, 254, 60, 72],
	[1294, 254, 60, 72],
	[1390, 254, 60, 72],
	[1486, 254, 60, 72],
	// [0, 0, 0, 0],
	// [0, 0, 0, 0],
	// [0, 0, 0, 0],
	// [0, 0, 0, 0],
	// [0, 0, 0, 0],
	// [0, 0, 0, 0],
	// [0, 0, 0, 0],
	// [0, 0, 0, 0],
	// [0, 0, 0, 0],
	// [0, 0, 0, 0],
	// [0, 0, 0, 0],
	// [0, 0, 0, 0],
	// [0, 0, 0, 0],
	// [0, 0, 0, 0],
	// [0, 0, 0, 0],
	// [0, 0, 0, 0],
	// [0, 0, 0, 0],
	[145, 368, 60, 72],
	[1198, 368, 60, 72],
	[1294, 368, 60, 72],
	[1245, 463, 60, 72],
	[1341, 463, 60, 72],
	[1460, 463, 106, 72],
	[1174, 558, 60, 72],
	[1270, 558, 60, 72],
	[1030, 654, 60, 72],
	[1126, 654, 60, 72],
	[1222, 654, 60, 72]];

convert();